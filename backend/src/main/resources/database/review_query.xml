<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.udong.dao.ReviewDao">

	<!--특정 상점에 대한 리뷰 전체조회 -->
	<select id="SelectAllReview" parameterType="map"
		resultType="com.ssafy.udong.dto.ReviewDto">

		select u.nickname as nickName,
		r.review_id as reviewId,
		r.user_id as userId, r.store_id as storeId,
		r.review_content as
		reviewContent,
		r.views as views, r.rate as rate, r.created_at as
		createdAt,
		r.review_like_count as reviewLikeCount
		FROM review r, user u
		WHERE r.store_id = #{store_id}
		and u.user_id = r.user_id
	</select>

	<!--리뷰 상세조회 -->
	<select id="SelectReview" parameterType="String"
		resultType="com.ssafy.udong.dto.ReviewDto">

		select review_id as reviewId, user_id as userId, store_id
		as storeId,
		review_content as reviewContent,
		views as views, rate as
		rate, created_at as createdAt, review_like_count as
		reviewLikeCount
		FROM review
		WHERE review_id = #{review_id}
	</select>

	<!--해당리뷰의 파일 url찾기 -->
	<select id="SelectFileUrl" parameterType="String"
		resultType="String">

		select file_url from image
		where file_id = ANY(select
		file_id from review_file
		where review_id = #{id});
	</select>

	<!--닉네임 찾기 -->
	<select id="FindNick" parameterType="String" resultType="String">
		select
		nickname as nickName
		from user
		WHERE user_id = #{user_id}
	</select>

	<!--리뷰 상세조회 <select id="SelectReview" parameterType="String" resultType="com.ssafy.udong.dto.ReviewDto"> 
		select review_id as reviewId, user_id as userId, store_id as storeId, review_content 
		as reviewContent, views as views, rate as rate, created_at as createdAt, 
		review_like_count as reviewLikeCount FROM review WHERE review_id = #{reviewId} 
		</select> -->




	<!--리뷰 삽입 -->
	<insert id="createReview"
		parameterType="com.ssafy.udong.dto.ReviewDto" useGeneratedKeys="true"
		keyProperty="reviewId">
		INSERT INTO review (user_id, store_id, review_content,
		rate)
		VALUES (#{userId}, #{storeId}, #{reviewContent}, #{rate});
	</insert>

	<!--리뷰 이미지삽입 -->
	<insert id="createReviewFile"
		parameterType="com.ssafy.udong.dto.ImageDto" useGeneratedKeys="true"
		keyProperty="fileId">
		INSERT INTO image (file_name, file_size, file_contentType,
		file_url)
		VALUES (#{fileName}, #{fileSize}, #{fileContentType},
		#{fileUrl});
	</insert>

	<!--리뷰와 파일 연결 -->
	<insert id="connectionFile"
		parameterType="com.ssafy.udong.dto.ReviewDto" useGeneratedKeys="true">
		INSERT
		INTO `review_file` (`review_id`, `user_id`, `store_id`, `file_id`,
		`rank`)
		VALUES ((select max(review_id) from review), #{userId},
		#{storeId}, (select max(file_id) from image), 1);
	</insert>



	<!--리뷰 삭제 -->
	<delete id="DeleteReview" parameterType="String">
		DELETE FROM review where
		review_id = #{review_id}
	</delete>

	<!--리뷰 조회수 증가 -->
	<update id="UpdateReviewReadCount" parameterType="String">
		UPDATE review
		set views = views + 1
		WHERE review_id = #{reviewId}
	</update>

	<insert id="createReviewReport"
		parameterType="com.ssafy.udong.dto.ReportDto">

		INSERT INTO review_report(user_id, review_id, store_id,
		content, category)
		VALUES (#{userId}, #{reviewId}, #{storeId},
		#{content}, #{category});
	</insert>

	<!--내가 쓴 리뷰 보기 -->
	<select id="SelectMyReview" parameterType="String"
		resultType="com.ssafy.udong.dto.ReviewDto">

		select review_id as reviewId, user_id as userId, store_id
		as storeId,
		review_content as reviewContent,
		views as views, rate as
		rate, created_at as createdAt, review_like_count as
		reviewLikeCount
		FROM review
		WHERE user_id = #{user_id}
	</select>

	<!--리뷰 조회수 보기 -->
	<select id="ReviewListTotalCount" parameterType="String"
		resultType="int">

		select count(*) from review
		where store_id = #{store_id}
	</select>
	
	<!--리뷰 수정 -->
	<update id="UpdateReview" parameterType="com.ssafy.udong.dto.ReviewDto">
		UPDATE review
		set  review_content = #{reviewContent}
		WHERE review_id = #{reviewId}
	</update>















</mapper>